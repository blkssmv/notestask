{"ast":null,"code":"var _jsxFileName = \"/Users/asikn/Desktop/beks/notes/src/components/ArchivePage.jsx\";\nimport React from 'react';\nimport CardContent from \"@mui/material/CardContent\";\nimport { Box, Button, CardActions, Grid, Typography } from \"@mui/material\";\nimport { Delete, UnarchiveOutlined } from \"@mui/icons-material\";\nimport Card from \"@mui/material/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ArchivePage = _ref => {\n  let {\n    archivedNotes,\n    removeNote,\n    unArchiveNote\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: archivedNotes.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 1,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Archived notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: archivedNotes.map(note => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                minHeight: '150px'\n              },\n              children: note.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              sx: {\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => removeNote(note),\n                children: /*#__PURE__*/_jsxDEV(Delete, {\n                  color: 'action'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => unArchiveNote(note),\n                children: /*#__PURE__*/_jsxDEV(UnarchiveOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      children: \"Archive is empty!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_c = ArchivePage;\nexport default ArchivePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArchivePage\");","map":{"version":3,"names":["React","CardContent","Box","Button","CardActions","Grid","Typography","Delete","UnarchiveOutlined","Card","ArchivePage","archivedNotes","removeNote","unArchiveNote","length","map","note","minHeight","text","justifyContent","id"],"sources":["/Users/asikn/Desktop/beks/notes/src/components/ArchivePage.jsx"],"sourcesContent":["import React from 'react';\nimport CardContent from \"@mui/material/CardContent\";\nimport {Box, Button, CardActions, Grid, Typography} from \"@mui/material\";\nimport {Delete, UnarchiveOutlined} from \"@mui/icons-material\";\nimport Card from \"@mui/material/Card\";\n\nconst ArchivePage = ({archivedNotes, removeNote, unArchiveNote}) => {\n    return (\n        <>\n            {archivedNotes.length\n                ?\n                <>\n                    <Box mb={1}>\n                        <Typography>\n                            Archived notes\n                        </Typography>\n                    </Box>\n                    <Grid container spacing={3}>\n                        {archivedNotes.map(note => (\n                            <Grid key={note.id} item xs={12} sm={6} md={3}>\n                                <Card>\n                                    <CardContent sx={{minHeight: '150px'}}>\n                                        {note.text}\n                                    </CardContent>\n                                    <CardActions sx={{justifyContent: 'space-between'}}>\n                                        <Button onClick={() => removeNote(note)}>\n                                            <Delete color={'action'}/>\n                                        </Button>\n                                        <Button onClick={() => unArchiveNote(note)}>\n                                            <UnarchiveOutlined/>\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </>\n                :\n                <Typography variant='h6' component='div'>\n                    Archive is empty!\n                </Typography>}\n        </>\n\n    );\n};\n\nexport default ArchivePage;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,GAAR,EAAaC,MAAb,EAAqBC,WAArB,EAAkCC,IAAlC,EAAwCC,UAAxC,QAAyD,eAAzD;AACA,SAAQC,MAAR,EAAgBC,iBAAhB,QAAwC,qBAAxC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;;AAEA,MAAMC,WAAW,GAAG,QAAgD;EAAA,IAA/C;IAACC,aAAD;IAAgBC,UAAhB;IAA4BC;EAA5B,CAA+C;EAChE,oBACI;IAAA,UACKF,aAAa,CAACG,MAAd,gBAEG;MAAA,wBACI,QAAC,GAAD;QAAK,EAAE,EAAE,CAAT;QAAA,uBACI,QAAC,UAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAMI,QAAC,IAAD;QAAM,SAAS,MAAf;QAAgB,OAAO,EAAE,CAAzB;QAAA,UACKH,aAAa,CAACI,GAAd,CAAkBC,IAAI,iBACnB,QAAC,IAAD;UAAoB,IAAI,MAAxB;UAAyB,EAAE,EAAE,EAA7B;UAAiC,EAAE,EAAE,CAArC;UAAwC,EAAE,EAAE,CAA5C;UAAA,uBACI,QAAC,IAAD;YAAA,wBACI,QAAC,WAAD;cAAa,EAAE,EAAE;gBAACC,SAAS,EAAE;cAAZ,CAAjB;cAAA,UACKD,IAAI,CAACE;YADV;cAAA;cAAA;cAAA;YAAA,QADJ,eAII,QAAC,WAAD;cAAa,EAAE,EAAE;gBAACC,cAAc,EAAE;cAAjB,CAAjB;cAAA,wBACI,QAAC,MAAD;gBAAQ,OAAO,EAAE,MAAMP,UAAU,CAACI,IAAD,CAAjC;gBAAA,uBACI,QAAC,MAAD;kBAAQ,KAAK,EAAE;gBAAf;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAII,QAAC,MAAD;gBAAQ,OAAO,EAAE,MAAMH,aAAa,CAACG,IAAD,CAApC;gBAAA,uBACI,QAAC,iBAAD;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA;cAAA;cAAA;cAAA;YAAA,QAJJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ,GAAWA,IAAI,CAACI,EAAhB;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QANJ;IAAA,gBAFH,gBA6BG,QAAC,UAAD;MAAY,OAAO,EAAC,IAApB;MAAyB,SAAS,EAAC,KAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EA9BR,iBADJ;AAqCH,CAtCD;;KAAMV,W;AAwCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}